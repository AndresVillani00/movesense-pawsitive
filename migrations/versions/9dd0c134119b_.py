"""empty message

Revision ID: 9dd0c134119b
Revises: 
Create Date: 2025-10-26 20:00:01.514685

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9dd0c134119b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('metrica_json',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('json_actividad', sa.JSON(), nullable=True),
    sa.Column('json_peso', sa.JSON(), nullable=True),
    sa.Column('json_pulso', sa.JSON(), nullable=True),
    sa.Column('json_temperatura', sa.JSON(), nullable=True),
    sa.Column('json_clasificacion', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sensor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('json_acelerometro', sa.String(), nullable=True),
    sa.Column('json_giroscopio', sa.String(), nullable=True),
    sa.Column('json_heart_rate', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tipo_metrica',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('metrica_name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('metrica_name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('is_veterinario', sa.Boolean(), nullable=False),
    sa.Column('subscription_code', sa.String(length=36), nullable=True),
    sa.Column('subscription_active', sa.Boolean(), nullable=True),
    sa.Column('stripe_customer_id', sa.String(length=120), nullable=True),
    sa.Column('stripe_subscription_id', sa.String(length=120), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('subscription_code'),
    sa.UniqueConstraint('username')
    )
    op.create_table('mascotas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mascota_name_id', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('raza', sa.String(), nullable=False),
    sa.Column('is_mix', sa.Boolean(), nullable=False),
    sa.Column('birth_date', sa.Date(), nullable=True),
    sa.Column('gender', sa.String(), nullable=False),
    sa.Column('is_Esterilizado', sa.Boolean(), nullable=False),
    sa.Column('foto_mascot', sa.String(), nullable=True),
    sa.Column('name_mascot', sa.String(), nullable=False),
    sa.Column('patologia', sa.String(), nullable=True),
    sa.Column('tamano', sa.String(), nullable=True),
    sa.Column('json_mascota', sa.JSON(), nullable=True),
    sa.Column('status', sa.Enum('active', 'nonactive', name='status'), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('mascota_name_id')
    )
    op.create_table('alerts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('danger_value', sa.Integer(), nullable=True),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('traffic_light', sa.Enum('rojo', 'amarillo', 'verde', name='traffic_light'), nullable=False),
    sa.Column('status_read', sa.Enum('leido', 'noleido', name='status_read'), nullable=False),
    sa.Column('post_time', sa.DateTime(), nullable=True),
    sa.Column('mascota_alerts_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['mascota_alerts_id'], ['mascotas.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('analysis',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('blood', sa.String(), nullable=True),
    sa.Column('bilirubin', sa.String(), nullable=True),
    sa.Column('urobiling', sa.String(), nullable=True),
    sa.Column('ketones', sa.String(), nullable=True),
    sa.Column('glucose', sa.String(), nullable=True),
    sa.Column('protein', sa.String(), nullable=True),
    sa.Column('nitrite', sa.String(), nullable=True),
    sa.Column('leukocytes', sa.String(), nullable=True),
    sa.Column('ph', sa.String(), nullable=True),
    sa.Column('foto_analysis', sa.String(), nullable=True),
    sa.Column('ia_analysis', sa.Text(), nullable=False),
    sa.Column('ts_init', sa.DateTime(), nullable=True),
    sa.Column('mascota_analysis_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['mascota_analysis_id'], ['mascotas.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comida',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('type_food', sa.Enum('suave', 'dura', name='type_food'), nullable=False),
    sa.Column('marca', sa.String(), nullable=False),
    sa.Column('grasa', sa.String(), nullable=False),
    sa.Column('proteina', sa.String(), nullable=False),
    sa.Column('fibra', sa.String(), nullable=False),
    sa.Column('ia_food', sa.Text(), nullable=True),
    sa.Column('quantity', sa.String(), nullable=False),
    sa.Column('food_time', sa.Time(), nullable=True),
    sa.Column('foto_food', sa.String(), nullable=True),
    sa.Column('ts_init', sa.DateTime(), nullable=True),
    sa.Column('mascota_comida_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['mascota_comida_id'], ['mascotas.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('incidencias',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('initial_date', sa.DateTime(), nullable=False),
    sa.Column('final_date', sa.DateTime(), nullable=False),
    sa.Column('ia_description', sa.Text(), nullable=False),
    sa.Column('ia_action', sa.Text(), nullable=False),
    sa.Column('alert_status', sa.String(), nullable=False),
    sa.Column('foto_incidencia', sa.String(), nullable=True),
    sa.Column('ts_alta', sa.DateTime(), nullable=False),
    sa.Column('mascota_incidencia_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['mascota_incidencia_id'], ['mascotas.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('metrica',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('valor_diario', sa.String(), nullable=True),
    sa.Column('valor_mensual', sa.String(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('ts_init', sa.DateTime(), nullable=True),
    sa.Column('sensor_id', sa.Integer(), nullable=True),
    sa.Column('mascota_metrica_id', sa.Integer(), nullable=True),
    sa.Column('tipo_metrica_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['mascota_metrica_id'], ['mascotas.id'], ),
    sa.ForeignKeyConstraint(['sensor_id'], ['sensor.id'], ),
    sa.ForeignKeyConstraint(['tipo_metrica_id'], ['tipo_metrica.metrica_name'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reportes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('food_ia', sa.Text(), nullable=False),
    sa.Column('description_ia', sa.Text(), nullable=False),
    sa.Column('action_ia', sa.Text(), nullable=False),
    sa.Column('future_ia', sa.Text(), nullable=False),
    sa.Column('analysis_ia', sa.Text(), nullable=False),
    sa.Column('status_read', sa.Enum('leido', 'noleido', name='status_read'), nullable=False),
    sa.Column('ts_alta', sa.DateTime(), nullable=True),
    sa.Column('mascota_reports_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['mascota_reports_id'], ['mascotas.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users_mascotas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('usuario_mascota_id', sa.Integer(), nullable=True),
    sa.Column('mascota_usuario_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['mascota_usuario_id'], ['mascotas.id'], ),
    sa.ForeignKeyConstraint(['usuario_mascota_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('veterinarios',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('num_colegiado', sa.String(), nullable=True),
    sa.Column('name_clinica', sa.String(), nullable=True),
    sa.Column('email_clinica', sa.String(), nullable=True),
    sa.Column('address_clinica', sa.String(), nullable=True),
    sa.Column('phone_clinica', sa.String(), nullable=True),
    sa.Column('name_doctor', sa.String(), nullable=True),
    sa.Column('last_name_doctor', sa.String(), nullable=True),
    sa.Column('email_doctor', sa.String(), nullable=True),
    sa.Column('phone_doctor', sa.String(), nullable=True),
    sa.Column('incidencias_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['incidencias_id'], ['incidencias.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email_clinica'),
    sa.UniqueConstraint('email_doctor'),
    sa.UniqueConstraint('num_colegiado')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('veterinarios')
    op.drop_table('users_mascotas')
    op.drop_table('reportes')
    op.drop_table('metrica')
    op.drop_table('incidencias')
    op.drop_table('comida')
    op.drop_table('analysis')
    op.drop_table('alerts')
    op.drop_table('mascotas')
    op.drop_table('users')
    op.drop_table('tipo_metrica')
    op.drop_table('sensor')
    op.drop_table('metrica_json')
    # ### end Alembic commands ###
